# -*- coding: utf-8 -*-
"""Introduction_to_numpy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17mLnGrmoxXpZcAZJvDMJM5rmhdCgZlC5

# Numpy : Numpy adalah library untuk numerical computing
"""

import numpy as np

"""Array dengan rank 1 dan panjang 3"""

[1,2,3]

"""Array dengan rank 2 panjang 3"""

[[1,2,3], [4,5,6]]

"""**ndarray** adalah nama class untuk sebuah numpy Array"""

a = np.array ([1, 2, 3])
b = np.array ([(1, 2, 3), (4, 5, 6)])

print(a)
print(b)

"""# Properti ndaarray

* ndarray.ndim = Untuk mengetahui jumlah dimensi (Rank) dari sebuah numpy array.
* ndarray.shape = Untuk mengetahui jumlah baris dan kolom pada sebuah numpy array.
* ndarray.size = Untuk mengetahui jumlah elemen dalam sebuah numpy array.
* ndarray.dtype = untuk mengetahui data type dari elemen yang ada di numpy array.
* ndarray.itemsize = untuk mengetahui ukuran elemen (bytes) yang ada di numpy array.
ndarray.data = buffer untuk meyimpan elemen - elemen didalam numpy array.
"""

a = np.array ([1, 2, 3])
b = np.array ([(1, 2, 3), (4, 5, 6)])

print(a)
print(b)

print(a.ndim)
print(a.shape)
print(a.size)
print(a.dtype)
print(a.itemsize)

print(b.ndim)
print(b.shape)
print(b.size)
print(b.dtype)
print(b.itemsize)

"""# Create Numpy Array

*  np.zeros : Semua array isinya 0 (Nol)
*  np.ones : Semua array isinya 1 (satu)
*  np.arange : memberikan scope dan panjang step
* np.linspace : memberikan scope dan jumlah elemen yang diinginkan
* np.random.random : memberikan angka acak
"""

np.zeros ((3, 3)) # membuat sebuah array zero dengan dimensi 3 dan elemen setiap dimensinya 3

np.ones((3, 3))

np.arange(1,2, 0.2) # Membuat sebuah array dengan range angka dari 1 - 2 (maksimal angka 2 ) dengan panjang atau jarak setiap elemen 0.3 point

np.linspace(1, 3, 6) # Membuat sebuah array dengan range angka 1- 3 dengan 6 elemen didalamnya

np.random.random ((2, 3))

"""# Shape and Operation

*  reshape : mengubah dimensi / shape dari sebuah numpy array
*  vstack : Stack numppy array secara vertical
*  hstack : stack numpy array scara horizontal
*  vsplit : split numpy array secara vertical
*  hsplit : split numpy array secara horizontal
"""

a = np.array ([(1, 2, 3), (4, 5, 6)])
a

# Reshape sebuah array

a = a.reshape (3, -1) # Artinya adalah merubah dimensi array a yang semula 2 baris 3 kolom, menjadi 3 baris dan otomatis kolom diatur sistem (-1) angka -1 juga bisa kita atur sendiri jumlah kolomnya
a

# vstack sebuah array

b = np.array ([(7, 8), (9, 10)])
b

# Menggabungkan Array a dan b secara vertical
# Harus mempunyai kolom yang sama
a = np.array ([(1, 2), (3, 4), (5, 6)])
b = np.array ([(7, 8), (9, 10)])

print (a)
print (b)

np.vstack ((a, b))

# Menggabungkan array secara horizontal
# Harus mempunyai baris/ dimensi yang sama

a = np.array ([(1, 2, 3), (4, 5, 6)])
b = np.array ([(11, 12, 13), (14, 15, 16)])
print(a)
print(b)

np.hstack((a, b))

# Vertikal Split sebuah array
# adalah membagi array yang diiris lewat baris

a = np.array([(1, 2, 3, 11, 12, 13), (4, 5, 6, 14, 15, 16)]) # Array 2 baris
print(a)

np.split(a, 2) # Array di split menjadi 2, kalau di split jadi 3 akan error, karena jumlah baris atau dimensinya cuma 2

# Horizontal Split sebuah array
# adalah membagi array yng diiris lewat kolom

a = np.array([(1, 2, 3, 11, 12, 13), (4, 5, 6, 14, 15, 16)])
print(a)

np.hsplit(a, 3) # Array di split menjadi 3, kalau di split jadi 5 akan error, karena jumlah kolom atau elemmnya cuma 6

print(' ')

np.hsplit(a, (1, 3)) # Split setelah kolom 1 dan 3

"""# INDEXING"""

data = np.arange(100, 200) # Membuat sebuah data dengan array 1 dimensi yang isi nya 100 - 200 (200 tidak termasuk)
print(data)
print ('')

index_lima = np.arange(0, 100, 5) # membuat sebuah index dengan menggunkana array yang nantinya muncul kelipatan 5 dimulai dari 0

print(index_lima)
print ('')

print(data[index_lima]) # memunculkan semua data array dengan index kelipatan lima

data2D = data.reshape (10, -1)

print(data2D) # Memunculkan semua elemen array
print('')

print(data2D[2]) # ini akan memunculkan baris ke 2 dari emelen array
print('')

print(data2D[2, 1]) # ini akan memunculkan array yang ada pada baris 2 kolom 1
print('')

print(data2D[-1, -1]) # ini akan memunculkan array yang ada pada baris terakhir dan kolom terakhir
print('')

print(data2D[:, 3]) # Artinya adalah mengakses semua data pada kolom 3
print('')

print(data2D[1:4, 3:5]) # artinya adalah memunculkan data dari baris 1 - 3 (4 tidak termasuk) dan kolom 3-4 (5 tidak termasuk)